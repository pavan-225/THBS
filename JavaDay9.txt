1)
package com.torryharris.ipack;

public class Item implements Comparable<Item>{
    private int id;
    private String name;

    public Item(int id, String name) {
        this.id = id;
        this.name = name;
    }

    @Override
    public String toString() {
        return "Item{" +
                "id=" + id +
                ", name='" + name + '\'' +
                '}';
    }

    @Override
    public int compareTo(Item i) {

        if(id>i.id)
            return 1;
        else
            if(id==i.id)
                return 0;
            else
                return -1;

    }
}

package com.torryharris.mainpack;

import com.torryharris.ipack.Item;

import java.util.PriorityQueue;
import java.util.Queue;

public class Main {

    public static void main(String[] args) {

        Queue<Item> pq=new PriorityQueue<Item>();

        pq.add(new Item(15,"Torry"));
        pq.add(new Item(110,"harris"));
        pq.add(new Item(11,"business"));
        pq.add(new Item(195,"solutions"));


        for(Item i:pq){
            System.out.println(i);

        }
        System.out.println();
        System.out.println(pq.poll());
        System.out.println();

        for(Item i:pq){
            System.out.println(i);

        }

        System.out.println();
        System.out.println(pq.poll());
        System.out.println();

        for(Item i:pq){
            System.out.println(i);

        }



    }
}


2)
package com.torryharris.mainpack.mainpack;

import com.sun.xml.internal.ws.policy.privateutil.PolicyUtils;
import com.torryharris.mainpack.spack.Student;

import java.util.ArrayList;
import java.util.Collections;

public class Main {

    public static void main(String[] args) {

        ArrayList<Student> slist=new ArrayList<Student>();
        slist.add(new Student(123,"jaggu",89));
        slist.add(new Student(124,"ramu",66));
        slist.add(new Student(125,"kilesh",55));
        slist.add(new Student(126,"oblesh",79));

        System.out.println("Printing before Sorting");
        for(Student s:slist)
            System.out.println(s);

        Collections.sort(slist);
        System.out.println();
        System.out.println("Printing after Sorting");
        for(Student s:slist)
            System.out.println(s);




    }

}

package com.torryharris.mainpack.spack;

public class Student implements Comparable<Student>{
    private int id;
    private String name;
    private int marks;

    public Student(int id, String name, int marks) {
        this.id = id;
        this.name = name;
        this.marks = marks;
    }

    @Override
    public String toString() {
        return "Student{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", marks=" + marks +
                '}';
    }
    @Override
    public int compareTo(Student s) {

        if (marks<s.marks)
            return 1;
        else
        if (marks==s.marks)
            return 0;
        else
            return -1;

    }

}


3)
package com.torryharris.comparator;

import com.torryharris.ppack.Person;

import java.util.Comparator;

public class AgeComparator implements Comparator<Person> {

    @Override
    public int compare(Person p1, Person p2) {
        if (p1.getAge()>p2.getAge())
            return 1;
        else
            if(p1.getAge()==p2.getAge())
                return 0;
            else
                return -1;

    }
}

package com.torryharris.mainpack;

import com.torryharris.comparator.AgeComparator;
import com.torryharris.ppack.Person;

import java.util.ArrayList;
import java.util.Collections;

public class Main {

    public static void main(String[] args) {

        ArrayList<Person> plist=new ArrayList<Person>();
        plist.add(new Person(100,"Rajesh",54));
        plist.add(new Person(800,"Suresh",34));
        plist.add(new Person(600,"Naresh",74));
        plist.add(new Person(300,"Kamesh",14));

        System.out.println(plist);

        Collections.sort(plist,new AgeComparator());
        System.out.println();

        System.out.println(plist);


    }
}

package com.torryharris.ppack;

public class Person {
    private int id;
    private String name;
    private int age;

    public Person(int id, String name, int age) {
        this.id = id;
        this.name = name;
        this.age = age;
    }

    @Override
    public String toString() {
        return "Person{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", age=" + age +
                '}';
    }

    public int getId() {
        return id;
    }


    public String getName() {
        return name;
    }



    public int getAge() {
        return age;
    }


}


4)
package com.torryharris.mainpack;

import java.io.File;
import java.io.IOException;

public class Main {

    public static void main(String[] args) {

        /*File file1=new File("C:\\Users\\pavan_bojanapu\\Desktop\\thfile1.doc");

        try {
            file1.createNewFile();
            System.out.println("File Created Successfully");
        } catch (IOException e) {
            e.printStackTrace();
        }
        System.out.println(file1.getAbsolutePath());
        System.out.println(file1.getName());

        System.out.println(file1.getParent());*/

        File dir=new File("C:\\Users\\pavan_bojanapu\\Documents");

        File[] filelist=dir.listFiles();

        for (File f:filelist){
            if(f.isFile()){
                System.out.println(f.getName());
            }
        }



    }
}


5)
package com.torryharris.mainpack;

import java.io.*;

public class Main {

    public static void main(String[] args) {

        File file1=new File("C:\\Users\\pavan_bojanapu\\Desktop\\thfile1.txt");
        try(FileReader fr=new FileReader(file1);
        BufferedReader br=new BufferedReader(fr);){

            String str;
            str= br.readLine();
           while (!str.equals("END"))

            //while ((str=br.readLine())!=null)
            {
                System.out.println(str);
                str= br.readLine();

            }

        }
        catch (FileNotFoundException e){
            e.printStackTrace();
        }
        catch (IOException e){
            e.printStackTrace();
        }
    }
}


6)
package com.torryharris.gpack;

public class Test <T,U>{

    private T obj1;
    private U obj2;

    public Test(T obj1, U obj2) {
        this.obj1 = obj1;
        this.obj2 = obj2;
    }

    @Override
    public String toString() {
        return "Test{" +
                "obj1=" + obj1 +
                ", obj2=" + obj2 +
                '}';
    }

    public T getObj1() {
        return obj1;
    }

    public U getObj2() {
        return obj2;
    }
}


package com.torryharris.mainpack;

import com.torryharris.gpack.Test;

public class Main {

    public static void main(String[] args) {

        Test<String,String> tob=new Test<String,String>("Hello","World");
        System.out.println(tob);


    }
}


7)
package com.torryharris.mainpack;

import com.torryharris.tpack.Test;

import java.util.ArrayList;

public class Main {

    public static void main(String[] args) {
        ArrayList<Double> iList=new ArrayList<Double>();
        iList.add(10.6);
        iList.add(20.7);
        iList.add(10.3);
        iList.add(20.4);

        System.out.println(Test.subOfList(iList));


    }
}


package com.torryharris.tpack;

import java.util.List;

public class Test {
    public static Number subOfList(List<? extends Number> nlist)
    {
        double s=0.0;
        for(Number n:nlist){
            s+=n.doubleValue();

        }
        return s;
    }
}
